# Swap
Currently don't have a swap on the left half, which is probably where I need
it.

# Leader key
Need to try this under the thumb when I have a key available.

# win + enter
Currently can't do it because the gui key is on the same key

# 5 col layout
- control and shift both need to be controlled by thumb or little finger so
  control+shift+<blah> can be done.
- tab can't be on the same key as control or shift otherwise you can't go
  backwards through things
- control needs to be on the left so I can one-handed copypasta
- I need to be able to control+home,end,etc so I need to be able to hit the
  layer switch to bring the keys at the same time as control.
- I need to be able to hit tab at the same as control, and ideally shift too.
  With the ergotravel setup I'm testing, I can use my index finger on the thumb
  control and my thumb on the tab. It's a hand movement but it work.
- need a home for tab,shift,control,\,|,=,+,-,_,',". So 3 on the base layer and 8 on
  the other layers. Parenthesis can give up their spot on the number layer and
  live just with the other brackets.
- with a thumb ctrl, doing left hand only ctrl+tab-ing doesn't work. Having a
  5th row so I can hit the layer modifier and control at the same time would fix
  this. Or just have that layer have pre-modified versions of those keys.

# A hacky chording solution
bool process_record_user(uint16_t keycode, keyrecord_t *record) {
  switch (keycode) {
    case VRSN:
      if (record->event.pressed) {
        SEND_STRING (QMK_KEYBOARD "/" QMK_KEYMAP " @ " QMK_VERSION);
      }
      return false;
    case KC_SPC:
      isKey1Pressed = record->event.pressed;
      return processBracketsLayerCombo() && true;
    case GUI_ENT:
      isKey2Pressed = record->event.pressed;
      return processBracketsLayerCombo() && true;
  }
  return true;
}

bool processBracketsLayerCombo(void) {
  if (isKey2Pressed == true && isKey1Pressed == true) {
    layer_on(BRKT);
    return false;
  }
  layer_off(BRKT);
  return true;
}
